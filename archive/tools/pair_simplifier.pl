#!/usr/bin/perl

use Getopt::Long;
# INPUT:
# The GFF 'UNIQUE_PAIR' file generated by pass_pair
# OUTPUT:
# A simplified tabular file: CONTIGNAME - STRAND - POS1 - POS2 - POS3 - POS4 (sorted)

$o = GetOptions(
 'i=s'  => \$file,
 'gff'  => \$gff,
 'sort=s' => \$sort,
 'dir=s'  => \$dir
);
#python2.7 /lustre/fabio/programs/python/select_454_reads_from_blast.py -s 2013_02_18_MichaelTangherlini_Pliciloricus-G-P_reads.fasta -b Loricifero_reads.Pro.blast -e 1e-05 
print STDERR "
 USAGE:
 pairinSimplifier.pl -i UNIQUE_PAIR [-gff] 
 OPTIONS:
	-gff          If input format is GFF rather than SAM
	-sort  FILE   Sort the file and save output (instead of STDOUT)
	-dir   DIR    Temporary directory for sort [unless default]

";

if ($sort) {
	$dir.='/' if ($dir and $dir!~/\/$/);
	$name = $file.'.temporary-simple';
	open(STDOUT, ">$dir$name") || die " FATAL ERROR:\n Unable to write tmp file.\n";
} 
open (STDIN, "$file") || die " FATAL ERROR:\n Unable to read input file $file.\n";

while (<STDIN>) {
	chomp;
	$c++;
	
	$from1 = $from2;
	$to1 = $to2;
	$d1  = $d2;
	$com1= $com2;
	if ($gff) {
		($contig, $x, $x, $from2, $to2, $span2, $strand, $x, $com2) = split (/\t/, $_);
	} else {
		next if ($_=~/^\@/);
		($nil, $flag, $contig, $from2, $nil, $cigar) = split /\t/, $_;
		$strand = strand($flag);
		$span2 = 0;		
		while ($cigar=~/(\d+)M/g) {
			$span2+=$1;
		}
		$to2 = $from2 + $span2;
		
	}
	unless ($c%100000) {
		my ($st, $mn) = stdev(@sizes) if ($c);
		print STDERR "$c lines. Insert Average: $mn / St.Dev.: $st\r"	
	}
	unless ($c%2) {

		$known{$contig}++;

		($from, $bi, $bo, $to) = sort {$a <=> $b} ($from1, $to1, $from2, $to2);
		print STDOUT "$contig\t$strand\t$from\t$bi\t$bo\t$to\n";
		my $ins = $bo - $bi;
		push(@sizes, $ins);

	}
	
	
}

if ($sort) {
	$d = '-T $dir' if ($dir);
	$c = "sort $d $dir$name > $sort";
	print STDERR "\n Now sorting file...\n";
	`$c && rm -f $dir$name`;
	
}
sub stdev {
 
	my @numbers = ();
	my @numbers = @_;
	my $sum = 0; 
        my $delta = 0; my $count = 0; 
        my $mean = 0; my $stddev = 0;
 
	foreach $number (@numbers) {
		$count++;
		$delta = $number - $mean;
		$mean = $mean + ($delta / $count);
		$sum = $sum + $delta*($number - $mean);
	}
	return (0,0) if ($count == 1);
	$stddev = sqrt($sum/($count - 1));
 
 
	return(sprintf("%.2f", $stddev), sprintf("%.2f",$mean));
 
 
}

sub strand{
  my $flag = shift;
  
  my $strand = '+';
  
  if ($flag & 0x10) {
	  $strand = '-';
  }
 
  
  return $strand;		
}


